syntax = "proto3";

import "google/protobuf/timestamp.proto";

option csharp_namespace = "Proto";

package chain;

message Node {
	string host = 1;
	int32 port = 2;
}

message AskPermissionToConnectRequest {
	Node nodeWantsToConnect = 1; // node that requests to connect
}

message AskPermissionToConnectResponse {
	bool canConnect = 1; // true if requesting node can connect, false if other node already connected
	Node connectedNode = 2; // node that connected to requested node
}

message AskToDisconnectRequest {
	Node nodeAsksToDiconnect = 1;
}

message AskToDisconnectResponse {
	bool isOk = 1;
}

message ConnectRequest {
	Node nodeWantsToConnect = 1;
}

message ConnectResponse {
	bool isOk = 1;
}

message LeaderElectionRequest {
	Node leaderNode = 1;
	string electionLoopId = 2;
	google.protobuf.Timestamp leaderConnectionTimestamp = 3;
}

message LeaderElectionResponse {
	bool isOk = 1;
}

service ChainService {

	// Ask permission to connect to node
	rpc AskPermissionToConnect (AskPermissionToConnectRequest) returns (AskPermissionToConnectResponse) {}

	// Ask node to disconnect from the node requesting node wants to connect
	rpc AskToDisconnect (AskToDisconnectRequest) returns (AskToDisconnectResponse) {}

	rpc Connect (ConnectRequest) returns (ConnectResponse) {}

	rpc ElectLeader (LeaderElectionRequest) returns (LeaderElectionResponse) {}
}